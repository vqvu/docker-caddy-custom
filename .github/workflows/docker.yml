name: Docker Build & Release

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - Dockerfile
  pull_request:
    branches: [main]
    paths:
      - Dockerfile

env:
  DOCKER_BUILDKIT: "1"
  DOCKER_BUILD_SUMMARY: "false"

jobs:
  metadata:
    name: Build metadata
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      image-title: ${{ steps.build-metadata.outputs.image-title }}
      image-name: ${{ steps.build-metadata.outputs.image-name }}
      caddy-version: ${{ steps.build-metadata.outputs.caddy-version }}
      branch-name: ${{ steps.build-metadata.outputs.branch-name }}
      labels: ${{ steps.docker-metadata.outputs.labels }}
      tags: ${{ steps.docker-metadata.outputs.tags }}
      platforms: linux/amd64
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Generate build metadata
        id: build-metadata
        shell: bash
        run: |
          IMAGE_TITLE=${GITHUB_REPOSITORY/*docker-/}
          IMAGE_NAME=$(echo "${GITHUB_REPOSITORY/docker-/}" | tr '[:upper:]' '[:lower:]')
          CADDY_VERSION=$(grep -m 1 -Eo 'caddy:[0-9]+\.[0-9]+\.[0-9]+' Dockerfile \
            | sed -E 's/.+:([0-9]+\.[0-9]+\.[0-9]+)(.+)?$/\1/g')
          BRANCH_NAME=$(echo "${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}" \
            | tr '[:upper:]' '[:lower:]' | sed 's/[^a-zA-Z0-9]/-/g')
          cat <<EOF | tee -a "$GITHUB_OUTPUT"
          image-title=$IMAGE_TITLE
          image-name=$IMAGE_NAME
          caddy-version=$CADDY_VERSION
          branch-name=$BRANCH_NAME
          EOF

      - name: Generate Docker image metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        id: docker-metadata
        with:
          images: |
            ghcr.io/${{ steps.build-metadata.outputs.image-name }}
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.build-metadata.outputs.caddy-version }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.build-metadata.outputs.caddy-version }}
            type=semver,pattern={{major}},value=v${{ steps.build-metadata.outputs.caddy-version }}
          labels: |
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.title=${{ steps.build-metadata.outputs.image-title }}
          annotations: |
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.title=${{ steps.build-metadata.outputs.image-title }}

  build:
    name: Build image
    runs-on: ubuntu-latest
    needs: [metadata]
    permissions:
      pull-requests: write
    outputs:
      image-ref: ttl.sh/${{ needs.metadata.outputs.image-name }}@${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Build CI Docker image
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6.12.0
        id: build
        with:
          context: .
          push: true
          tags: ttl.sh/${{ needs.metadata.outputs.image-name }}:${{ github.sha }}
          labels: ${{ needs.metadata.outputs.labels }}
          platforms: ${{ needs.metadata.outputs.platforms }}
          cache-to: type=inline,mode=max

      - name: Find existing PR comment
        if: github.event_name == 'pull_request' && cancelled() == false
        id: find
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: View Workflow Run
          direction: first

      - name: Add/Update PR success comment
        if: github.event_name == 'pull_request' && success()
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## ✅ PR built successfully!

            #### **[⏩ View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})**

            You can access your ephemeral image for up to 24hrs at:

            ```
            ttl.sh/${{ needs.metadata.outputs.image-name }}@${{ steps.build.outputs.digest }}
            ```

      - name: Add/Update PR failure comment
        if: github.event_name == 'pull_request' && failure()
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 💥 PR build failure!

            #### **[⏩ View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})**

            Uh oh, something went wrong building your PR!

  publish:
    name: Publish image
    if: github.ref == 'refs/heads/main'
    needs: [metadata, build]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      id-token: write # needed for signing the images with GitHub OIDC Token
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Login to GitHub Container Repository
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Publish final Docker image
        id: publish
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6.12.0
        with:
          context: .
          push: true
          tags: ${{ needs.metadata.outputs.tags }}
          labels: ${{ needs.metadata.outputs.labels }}
          platforms: ${{ needs.metadata.outputs.platforms }}
          cache-from: type=registry,ref=${{ needs.build.outputs.image-ref }}

      # We sign each registry separately
      - name: Sign final Docker images
        shell: bash
        env:
          IMAGE_NAME: ${{ needs.metadata.outputs.image-name }}
          IMAGE_DIGEST: ${{ steps.publish.outputs.digest }}
        run: |
          cosign sign --yes --recursive "ghcr.io/$IMAGE_NAME@$IMAGE_DIGEST"

      # This will automatically attach the SBOM to the release
      - name: Generate final Docker image SBOM
        uses: anchore/sbom-action@df80a981bc6edbc4e220a492d3cbe9f5547a6e75 # v0.17.9
        with:
          format: spdx-json
          image: ghcr.io/${{ needs.metadata.outputs.image-name }}@${{ steps.publish.outputs.digest }}
          artifact-name: ${{ needs.metadata.outputs.image-title }}.spdx.json
          output-file: ${{ needs.metadata.outputs.image-title }}.spdx.json

      - name: Update Git tags
        shell: bash
        env:
          CADDY_VERSION: ${{ needs.metadata.outputs.caddy-version }}
        run: |
          MAJOR=$(echo "$CADDY_VERSION" | cut -d . -f 1)
          MINOR=$(echo "$CADDY_VERSION" | cut -d . -f 2)
          PATCH=$(echo "$CADDY_VERSION" | cut -d . -f 3)
          git tag -f "v$MAJOR"
          git tag -f "v$MAJOR.$MINOR"
          git tag -f "v$MAJOR.$MINOR.$PATCH"
          git push -f -u origin "v$MAJOR"
          git push -f -u origin "v$MAJOR.$MINOR"
          git push -f -u origin "v$MAJOR.$MINOR.$PATCH"

      - name: Create GitHub release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          tag_name: v${{ needs.metadata.outputs.caddy-version }}
          make_latest: true
          generate_release_notes: false
          body: |
            ### [🚀 Caddy v${{ needs.metadata.outputs.caddy-version }} Changelog](https://github.com/caddyserver/caddy/releases/tag/v${{ needs.metadata.outputs.caddy-version }})

            ## 🐳 Docker Images

            ```
            ${{ needs.metadata.outputs.image-name }}:latest
            ${{ needs.metadata.outputs.image-name }}:${{ needs.metadata.outputs.caddy-version }}
            ${{ needs.metadata.outputs.image-name }}@${{ steps.publish.outputs.digest }}
            ```

            ## 🔏 Signatures

            ```
            cosign verify \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com \
              --certificate-identity-regexp ${{ github.server_url }}/${{ github.repository }}/.github/workflows/ \
              ${{ needs.metadata.outputs.image-name }}@${{ steps.publish.outputs.digest }}
            ```
          files: |
            *.spdx.json

      - uses: actions/delete-package-versions@v5
        with: 
          package-name: ${{ needs.metadata.outputs.image-title }}
          package-type: 'container'
          min-versions-to-keep: 10
          delete-only-untagged-versions: 'true'
